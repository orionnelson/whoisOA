name: Build and publish Docker images as GitHub Artifacts

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Export build_and_save_docker_image function
        run: |
          cat << 'EOF' > build_and_save_docker_image.sh
          #!/bin/bash

          build_and_save_docker_image() {
            DOCKERFILE_PATH=$1
            IMAGE_NAME=$2
            FILE_NAME_REGEX="[A-z]+.tar$"
            docker build -t ${IMAGE_NAME}:latest ${DOCKERFILE_PATH}
            docker tag ${IMAGE_NAME}:latest ${IMAGE_NAME}:latest
            docker save ${IMAGE_NAME}:latest > ${IMAGE_NAME}.tar
            if [[ ${IMAGE_NAME}.tar =~ $FILE_NAME_REGEX ]]; then
              FILE_NAME="${BASH_REMATCH[1]}"
              echo -n "${IMAGE_NAME}.tar MD5: " >> sha.txt && md5sum ${IMAGE_NAME}.tar | awk '{ print $1 }' >> sha.txt
            fi
          }
          EOF
          chmod +x build_and_save_docker_image.sh

      - name: Build and save frontend image
        id: frontend
        run: |
           source ./build_and_save_docker_image.sh
           build_and_save_docker_image ./frontend frontend
        continue-on-error: true

      - name: Build and save graphql image
        id: graphql
        run: |
          source ./build_and_save_docker_image.sh
          build_and_save_docker_image ./graphql graphql
        continue-on-error: true

      - name: Build and save whois image
        id: whois
        run: |
          source ./build_and_save_docker_image.sh
          build_and_save_docker_image ./whois whois
        continue-on-error: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: docker-images
          path: |
            sha.txt
            frontend.tar
            whois.tar
            graphql.tar
